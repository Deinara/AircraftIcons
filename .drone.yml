kind: pipeline
name: default

steps:
- name: Minify test
  image: node
  commands:
  - npm init --force 1>/dev/null
  - npm install svgo
  
  # Create the minified svg files and capture the output
  - mkdir minified
  - COMMANDOUT=$(npm run -s env -- svgo -f ./ -r -o ./minified --pretty --disable=removeDoctype,removeXMLProcInst,convertPathData ) && export COMMANDOUT
  - rm -r minified && mkdir minified
  - COMMANDOUTPATHOPT=$(npm run -s env -- svgo -f ./ -r -o ./minified --pretty --disable=removeDoctype,removeXMLProcInst ) && export COMMANDOUTPATHOPT
  - rm -r minified
  - echo "$$COMMANDOUT" > ./minify_output.txt
  - echo "$$COMMANDOUTPATHOPT" > ./minify_output_path_opt.txt
  
  # Convert the output to one line
  - paste -s -d ' ' ./minify_output.txt | tee ./minify_oneline.txt 1>/dev/null
  - paste -s -d ' ' ./minify_output_path_opt.txt | tee ./minify_oneline_path_opt.txt 1>/dev/null
  
  # Use REGEX to find the files and their compression ratios
  - grep -Po "([a-zA-Z0-9]+)\\.svg.+? - ([0-9]{1,5})[0-9\\.]{0,2}%.+?KiB" ./minify_oneline.txt | tee ./minify_compact.txt 1>/dev/null
  - grep -Po "([a-zA-Z0-9]+)\\.svg.+? - ([0-9]{1,5})[0-9\\.]{0,2}%.+?KiB" ./minify_oneline_path_opt.txt | tee ./minify_compact_path_opt.txt 1>/dev/null
  
  # Use AWK to select files that are too large 
  # The filesize saved by removing comments, editor data, unused elements etc should be no more than 15%
  # The filesize saved by optimizing the path should be no more than 40%. This limit is this high because some path optimizers mess up the output path.
  - awk '$9+0 > 15' ./minify_compact.txt | tee ./minify_toolarge.txt 1>/dev/null
  - awk '$9+0 > 40' ./minify_compact_path_opt.txt | tee -a ./minify_toolarge.txt 1>/dev/null
  - ! grep -c % ./minify_toolarge.txt 1>/dev/null && echo "The following files can be shrunk down further!"
  - awk '{ print $1, $6, $7, $9 }' ./minify_toolarge.txt
  - if grep % ./minify_toolarge.txt 1>/dev/null; then exit 1; else exit 0; fi
  
- name: Test icon-font-generator
  image: node
  commands:
  - mkdir web
  - npm init --force
  - npm install icon-font-generator
  - npm run -s env -- icon-font-generator ./*/*.svg -o web -n AircraftIcons
  when:
    event:
    - pull_request
    
- name: Copy duplicate icons
  image: python:3
  commands:
  - python ./copy_icons.py
  when:
    event:
    - push
    
- name: Create release files
  image: johnodon/inkscape
  commands:
  - mkdir release && mkdir release/svg && mkdir release/png_small && mkdir release/png_large && mkdir release/bmp_vrc
  - cp LICENSE.md release/license.txt
  - cp ./*/*.svg release/svg
  #- for file in *./*/*.svg; do inkscape $file -o release/png_small/${file%svg}png; done
  - inkscape -V
  #- for file in ./*/*.svg; do inkscape -e release/png_small/$${file%svg}png -f $$file; done
  - for file in ./*/*.svg; do fileout=$${file##*/} && fileout=$${fileout%svg} && inkscape -e release/png_small/$${fileout}png -f $$file; done
  - cp -r ./release ./web
  when:
    event:
    - push
    
- name: Generate preview page and badge
  image: node
  commands:
  - NUMICONS=$(find .//./*/*.svg -name 'supporting' -o -name '.git' -prune -o -print | grep -c //) && export NUMICONS
  - echo "Icons found $$NUMICONS"
  - mkdir -p web
  - npm init --force
  - npm install icon-font-generator
  - npm install gh-badges
  - npm run -s env -- icon-font-generator ./*/*.svg -o web -n AircraftIcons
  - npm run -s env -- badge icons $$NUMICONS :green svg > web/numicons.svg
  when:
    event:
    - push

- name: Write preview files
  image: eeacms/rsync
  environment:
    RSYNC_URL:
      from_secret: rsync_url
    RSYNC_PORT:
      from_secret: rsync_port
    RSYNC_USER:
      from_secret: rsync_user
    RSYNC_PASSWORD:
      from_secret: rsync_password
  commands:
  - find ./web/ -type f -exec chmod 644 {} \;
  - find ./web/ -type d -exec chmod 755 {} \;
  - rsync -rpP --delete --delete-excluded ./web/ rsync://$$RSYNC_USER@$$RSYNC_URL:$$RSYNC_PORT/volume/AircraftIcons/$$DRONE_BRANCH/
  when:
    event:
    - push
    
- name: Purge github 'icon count' cache
  image: curlimages/curl
  commands:
  # Purge github icon count
  - curl -X PURGE https://camo.githubusercontent.com/861b97c3e4808129a914551ff755de6618d7cc4a/68747470733a2f2f64726f6e652e6465696e6172612e6e6c2f7765622f416972637261667449636f6e732f6d61737465722f6e756d69636f6e732e737667
  when:
    event:
    - push
    branch:
    -  master
